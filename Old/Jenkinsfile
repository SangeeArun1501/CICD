pipeline {
  agent any
  stages {
    stage('mvn build') {
      steps 
      {
        sh 'mvn clean package'
      }
    }
    stage('docker build') {
      steps
      {
        script {
        def dockerImage = "sangeetha1501/java_app:${env.BUILD_NUMBER}"
         sh "docker build -t $dockerImage ."
      }
      }
    }
    stage('docker Push') {
      steps
      {
        script {
        withDockerRegistry([ credentialsId: "dockerhub", url: "https://index.docker.io/v1/" ]) {
          //sh 'echo \$DOCKER_HUB_PASSWORD | docker login -u \$DOCKER_HUB_USERNAME --password-stdin'
          sh "docker push sangeetha1501/java_app:${env.BUILD_NUMBER}"
        }
  }
}
    }
  }
}


 stage('application deploy') {
            steps{
                script {
                    withCredentials([usernamePassword(credentialsId: 'awscred', usernameVariable: 'aws_access_key_id', passwordVariable: 'aws_secret_key_id')]) 
                    {
                        sh 'aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 590183905103.dkr.ecr.us-east-2.amazonaws.com' 
                        echo 'Login Successfull'
                        sh 'docker build -t testrepo .'
                        echo ' Build successfull'
                        sh "docker tag testrepo:latest 590183905103.dkr.ecr.us-east-2.amazonaws.com/testrepo:latest"
                        echo 'image tagged as 590183905103.dkr.ecr.us-east-2.amazonaws.com/testrepo:latest'
                        sh "docker push 590183905103.dkr.ecr.us-east-2.amazonaws.com/testrepo:latest"
                        echo ' image pushed to dockerhub'
                        sh "docker run -p 3000:8080 -d 590183905103.dkr.ecr.us-east-2.amazonaws.com/testrepo:latest"
                        echo ' application deployed successfully'
                    }
            }
        }
    }
}
}

